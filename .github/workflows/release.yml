name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: windows
            goarch: amd64
            ext: .exe
            ldflags: "-s -w -H=windowsgui"
          - goos: darwin
            goarch: amd64
            ext: ""
            ldflags: "-s -w"
          - goos: linux
            goarch: amd64
            ext: ""
            ldflags: "-s -w"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Derive version
        id: version
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          VERSION="${VERSION//\//_}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          EXT: ${{ matrix.ext }}
          LDFLAGS: ${{ matrix.ldflags }}
        run: |
          go build -trimpath -ldflags "$LDFLAGS" -o "slack-mod$EXT" ./

      - name: Package
        env:
          EXT: ${{ matrix.ext }}
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          ARCHIVE="slack-mod_${GOOS}_${GOARCH}_v${VERSION}.zip"
          zip -r "$ARCHIVE" "slack-mod$EXT" injection
          echo "ARCHIVE=$ARCHIVE" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARCHIVE }}
          path: ${{ env.ARCHIVE }}
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Derive version
        id: version
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          VERSION="${VERSION//\//_}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.version.outputs.version }}
          files: dist/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
